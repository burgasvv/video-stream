
services:
  postgres:
    image: postgres
    container_name: video_stream_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/data/postgresql

  nginx:
    image: nginx:latest
    container_name: video_stream_nginx
    ports:
      - "8050:80"

  rtmp:
    image: rtmpsurf/rtmp
    container_name: video_stream_rtmp
    ports:
      - "1935:1935"
      - "8090:8090"
    environment:
      HTTP_PORT: 8090
      RTMP_PORT: 1935

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: video_stream_zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: video_stream_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: video_stream_zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

  keycloak:
    image: quay.io/keycloak/keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8070
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    ports:
      - "8070:8070"
      - "7443:7443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8070/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--http-port", "8070", "--https-port", "7443" ]
    networks:
      - local_network

  database-server:
    build:
      context: database-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    environment:
      SPRING_DATASOURCE-URL: jdbc:postgresql://postgres:5432/postgres

  backend-server:
    build:
      context: backend-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - postgres
      - keycloak
      - database-server
    environment:
      SPRING_DATASOURCE-URL: jdbc:postgresql://postgres:5432/postgres

networks:
  local_network:
    driver: bridge